import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.*;
import java.sql.*;
//import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.lang.Math.*;
import java.lang.Thread;
import static javax.swing.JRootPane.FRAME;
public class Transfer extends javax.swing.JFrame {

    public static String uname;
    public static String email;
    public static int Balance = Integer.MAX_VALUE;
    public static int s =-1;
    public Transfer() {
        initComponents();
        this.setLocationRelativeTo(null);
        try
            {
                Connection connection=DriverManager.getConnection("jdbc:derby://localhost:1527/Tedo_bank","Zython","Miichan");
                Statement stmnt1=connection.createStatement();
                ResultSet rSet1=stmnt1.executeQuery("select * from ACCOUNT_DETAILS");
                Statement stmnt2=connection.createStatement();
                ResultSet rSet2=stmnt2.executeQuery("select * from ACCOUNT_TRANSACTION");
                
                while(rSet1.next())
                {
                    if(rSet1.getString(8).equals(uname))
                    {
                        String Name=rSet1.getString(1);
                        email=rSet1.getString(5);
                        Account_holder.setText(Name);
                        
                    }
                }
                while(rSet2.next())
                {
                    if(rSet2.getString(1).equals(uname))
                    {
                        Balance=rSet2.getInt(2);
                        String Str_Balance=Integer.toString(Balance);
                        Transfer_Balance.setText(Str_Balance);
                    }
                }
                if(Balance<=1000)
                {
                    JOptionPane.showMessageDialog(null,"Out of Balance You cannot Transfer\n SO, Back to Login page");
                }
                 
            } catch (SQLException ex) {
                Logger.getLogger(Debit.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    public Transfer(String user_name)
    {
        this.uname=user_name;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Transfer_amnt = new javax.swing.JButton();
        Currency = new javax.swing.JComboBox<>();
        Transfer_Balance = new javax.swing.JLabel();
        Account_holder = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Transfer_Amount = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Receiver_User_name = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(850, 699));

        jPanel1.setBackground(new java.awt.Color(254, 127, 156));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tedo Banc");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("-");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 27)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("x");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(293, 293, 293)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Balance:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Account Holder :");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Currency :");

        Transfer_amnt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Transfer_amnt.setForeground(new java.awt.Color(51, 0, 51));
        Transfer_amnt.setText("Transfer");
        Transfer_amnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Transfer_amntActionPerformed(evt);
            }
        });

        Currency.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Currency.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rupees", "Dollars", "Pounds" }));
        Currency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrencyActionPerformed(evt);
            }
        });

        Transfer_Balance.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Transfer_Balance.setForeground(new java.awt.Color(255, 255, 255));
        Transfer_Balance.setToolTipText("");

        Account_holder.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Account_holder.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("User Name to Transfer :");

        Transfer_Amount.setBackground(new java.awt.Color(0, 153, 153));
        Transfer_Amount.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Transfer_Amount.setForeground(new java.awt.Color(255, 255, 255));
        Transfer_Amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Transfer_AmountActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Amount :");

        Receiver_User_name.setBackground(new java.awt.Color(0, 153, 153));
        Receiver_User_name.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Receiver_User_name.setForeground(new java.awt.Color(255, 255, 255));
        Receiver_User_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Receiver_User_nameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(41, 41, 41)
                        .addComponent(Account_holder, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 94, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(38, 38, 38)
                        .addComponent(Transfer_Balance, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Transfer_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Currency, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Receiver_User_name, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(343, 343, 343)
                .addComponent(Transfer_amnt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Account_holder)
                    .addComponent(Transfer_Balance)
                    .addComponent(jLabel4))
                .addGap(96, 96, 96)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Receiver_User_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Currency, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Transfer_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88)
                .addComponent(Transfer_amnt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(224, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void CurrencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrencyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CurrencyActionPerformed

    private void Transfer_amntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Transfer_amntActionPerformed
        if(evt.getSource()==Transfer_amnt)
        {
            String User_name=Receiver_User_name.getText();
            String Transfer_currency=Currency.getSelectedItem().toString();
            String Amount=Transfer_Amount.getText();
            int Cre_Amount=Integer.parseInt(Amount);
            int flag=0;
            try
            {
                Connection connection=DriverManager.getConnection("jdbc:derby://localhost:1527/Tedo_bank","Zython","Miichan");
                Statement stmnt1=connection.createStatement();
                ResultSet rSet1=stmnt1.executeQuery("select * from ACCOUNT_TRANSACTION");
                Statement stmnt2=connection.createStatement();
                ResultSet rSet2=stmnt2.executeQuery("select * from ACCOUNT_TRANSACTION");
                while(rSet1.next())
                {
                    String temp=rSet1.getString(1);
                    //System.out.println("First Init Success");
                    if(temp.equals(User_name))
                    {
                        //System.out.println("First Cond Success");
                        while(rSet2.next())
                        {
                            String temp2=rSet2.getString(1);
                            //System.out.println("Second Init Success");
                            if(temp2.equals(uname))
                            {
                                //System.out.println("Secondt Cond Success");
                                flag=1;
                                int ReceiverBalance=rSet1.getInt(2);
                                int SenderBalance=rSet2.getInt(2);
                                if(Transfer_currency.equals("Dollars"))
                                {
                                    Cre_Amount=Cre_Amount*72;
                                    ReceiverBalance=ReceiverBalance+Cre_Amount;
                                    SenderBalance=SenderBalance-Cre_Amount;
                                    if(SenderBalance<1000)
                                    {
                                        JOptionPane.showMessageDialog(null,"Account gone to Minimum Balance !!");
                                    }
                                    else
                                    {
                                        Mailer obj=new Mailer();
                                        int otpNum = (int)(Math.random() * 999999) + 100000;
                                        //System.out.println(otpNum);
                                        String otp="You OTP number for Continue the Transaction is  "+otpNum;
                                        obj.send("zythonencoders@gmail.com","SanPanVen302218",email,"One Time Password",otp);
                                        authentication au = new authentication();
                                        au.setDataTransfer(otpNum,ReceiverBalance,User_name,SenderBalance,uname,Cre_Amount,email,"Dollars");
                                        au.setVisible(true);
                                        au.setLocationRelativeTo(null);
                                        au.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                                        this.dispose();
                                    }
                                    
                                }
                                else if(Transfer_currency.equals("Pounds"))
                                {
                                    Cre_Amount=Cre_Amount*103;
                                    ReceiverBalance=ReceiverBalance+Cre_Amount;
                                    SenderBalance=SenderBalance-Cre_Amount;
                                    if(SenderBalance<1000)
                                    {
                                        JOptionPane.showMessageDialog(null,"Account gone to Minimum Balance !!");
                                    }
                                    else
                                    {
                                        Mailer obj=new Mailer();
                                        int otpNum = (int)(Math.random() * 999999) + 100000;
                                        //System.out.println(otpNum);
                                        String otp="You OTP number for Continue the Transaction is  "+otpNum;
                                        obj.send("zythonencoders@gmail.com","SanPanVen302218",email,"One Time Password",otp);
                                        authentication au = new authentication();
                                        au.setDataTransfer(otpNum,ReceiverBalance,User_name,SenderBalance,uname,Cre_Amount,email,"Pounds");
                                        au.setVisible(true);
                                        au.setLocationRelativeTo(null);
                                        au.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                                        this.dispose();
                                    }
                                    
                                }
                                else if(Transfer_currency.equals("Rupees"))
                                {
                                    //System.out.println(Balance);
                                    ReceiverBalance=ReceiverBalance+Cre_Amount;
                                    SenderBalance=SenderBalance-Cre_Amount;
                                    if(SenderBalance<1000)
                                    {
                                        JOptionPane.showMessageDialog(null,"Account gone to Minimum Balance !!");
                                    }
                                    else
                                    {
                                        Mailer obj=new Mailer();
                                        int otpNum = (int)(Math.random() * 999999) + 100000;
                                        //System.out.println(otpNum);
                                        String otp="You OTP number for Continue the Transaction is  "+otpNum;
                                        obj.send("zythonencoders@gmail.com","SanPanVen302218",email,"One Time Password",otp);
                                        authentication au = new authentication();
                                        au.setDataTransfer(otpNum,ReceiverBalance,User_name,SenderBalance,uname,Cre_Amount,email,"Rupees");
                                        au.setVisible(true);
                                        au.setLocationRelativeTo(null);
                                        au.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                                        this.dispose();
                                    }
                                }
                                break;
                            }
                        }         
                    }
                    
                }
                if(flag==0)
                {
                   JOptionPane.showMessageDialog(null,"There is no Such User !!"); 
                }
            } catch (SQLException ex) {
                    Logger.getLogger(Credit.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_Transfer_amntActionPerformed
    public static void status(int temp)
    {
        Transfer.s = temp;
        System.out.println("True");
    }
    private void Transfer_AmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Transfer_AmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Transfer_AmountActionPerformed

    private void Receiver_User_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Receiver_User_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Receiver_User_nameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transfer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Account_holder;
    private javax.swing.JComboBox<String> Currency;
    private javax.swing.JTextField Receiver_User_name;
    private javax.swing.JTextField Transfer_Amount;
    private javax.swing.JLabel Transfer_Balance;
    private javax.swing.JButton Transfer_amnt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private void JOptionShowMessage() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
